/// 메소드 오버로딩
/// - 하나의 클래스 안에 같은 이름의 메소드 중복 정의 
/// - 다형성
/// - 다음의 2 조건을 모두 만족하여야 한다.
/// + 메소드의 이름이 동일 함
/// + 인수의 개수가 다르거나 인수의 타입이 달라야함
/// ================> 하나의 이름의 메소드를 여러개 만들어 놓은거

/// 생성자

/// 접근 지정자
/// - 한 객체에서 다른 객체로 접근하는 것을 허용하는 방식
/// - 클래스에 대한 접근 지정자
/// - 멤버(필드, 메소드)에 대한 접근 지정자
/// - 4가지 접근 지정자 제공  => 매우 중요 잘 기억해두어야함
/// 	private
/// 	protected
/// 	public
/// 	default

/// ㅁ 클래스에 대한 접근 지정자
/// * 2가지의 접근 지정자 제공 : public, default

/// public => 어느클래스에서도 해당 클래스를 객체로 사용 가능
/// default => 같은 패키지의 클레스에서만 해당클래스 사용가능 / 다른 패키지에서는 사용 불가 

default, protected : 같은 패키지에서만 사용 가능
private : 모두 접근 불가
public : 모두 접근 가능



